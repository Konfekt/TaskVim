*todo* *todo.txt* *taskvim*
Strip-off of TaskVim by Jose Luis Diaz Gonzalez <joseluisdgz@me.com>
from 10th February 2012

==============================================================================
ABOUT                                               *taskvim-about*

TaskVim is inspired by Taskpaper: simple to-do list in plain text. You can
group your tasks in projects or areas and keep it simple.

I love plain text, I love colors (rather than just black on white) and I have
multiples OSs (at home, at work, mobility). So after tried a lot of
productivity systems and apps, I always come back to a simple list
(in a plain txt) of tasks grouped in projects or areas of my life. And the
best multiplatform text editor I know is Vim.

TaskVim uses syntax coloring to highlight the status (and elements) of your
tasks that are always kept in a simple txt file.

==============================================================================
INSTALLATION                                        *taskvim-installation*

Unpack the archive to ~/.vim.
It contains the following files:

    doc/todo.txt
    ftplugin/todo.vim
    syntax/todo.vim
    ftdetect/todo.vim

To access this help file from within Vim you must first update your help 
tags:

    :helptags ~/.vim/doc

To access the TaskVim help execute this command:

    :help todo

==============================================================================
QUICKSTART                                          *todo-quickstart*

Create a file todo.txt (or <filename>.todo / todo.txt) that may look like

    Project 1:
      - Normal task
      > Important task
      + Done task
      ? Pending task

    Project 2:
      - Normal task
      > Important task

A *Project* groups several Tasks. If a line ends with : then it marks a Project.
A *Task* is an item of a Project. If a line starts with -,>,+ or ? then it marks
a Normal, Important, Done or Pending Task.
A *Note* is every other line. That is, a line that neither ends with : nor starts
with -,>,+ or ?.

A task supports Code, Tags and Dates. See section SYNTAX below.

==============================================================================
SYNTAX                                              *taskvim-syntax*

You have 3 main elements: 
    - Projects: 
    - Tasks: 
    - Notes:

The syntax file highlights all these elements with the predefined colors of
the colorscheme you have configured in your vimrc. 

# PROJECTS:

To define a project write some text at the begining of a line ending in a
colon.  

Example:

TaskVim vim plugin:

    — sometask
    — another task

# TASKS:

A task is a line beginning with '-' or '—' 

If you press 'o' or '<cr>' on a task line, it will create a new task in the
next line.

A task can have several subelements to add additional information to that
task:
    - code
    - tag/context
    - date
    - version

To classify your tasks you could use a Project header, a code, or a tag.

## Code: You can assign a code to a task. A code can help you to classify that
task into a project, an area of your life, some event, etc.

To assign a code to a task, type a non-spaced code at the beginning of the
task ending in a colon.

Example:

TaskVim vim plugin:

    — prj_taskvim: write doc file — prj_taskvim: upload updates to github

## Tag: A tag has the form "@tag" 

Example:

TaskVim vim plugin:

    — prj_taskvim: write doc file @write — prj_taskvim: upload updates to
    github @github

## Date: The date when you want to schedule that task or whatever meaning you
    want to give to that date.

The date is freeform. By now it's just simple text preceded by a hash

Examples:
        #mon        - schedule for next monday
        #saturday   - schedule for next saturday
        #03162012   - ...
        #March16th  - whatever format you want to use for your dates

TaskVim vim plugin:

    — prj_taskvim: write doc file #friday @write
    — prj_taskvim: upload updates to github #tomorrow @github

## Version:
If you are a programmer (professional or amateur) you can link some task to a
version of your app, script, service, whatever.

Examples:
        v0.1
        v5.4
        v15.56 - just the format vXY.WZ

TaskVim vim plugin:

    — prj_taskvim: write doc file #friday @write
    — prj_taskvim: v0.3 upload updates to github #tomorrow @github

A Task can have four different states:
    - Normal Task
    - Important Task
    - Completed Task
    - Pending Task
        
## Important Task
An important task is a line beginning with '>' and can have zero or more
context tags.

Example:

TaskVim vim plugin:

    > prj_taskvim: write doc file #friday @write
    — prj_taskvim: v0.3 upload updates to github #tomorrow @github

## Completed Task
A completed task is a line beginning with '+'.

Example:

TaskVim vim plugin:

    + prj_taskvim: write doc file #friday @write
    — prj_taskvim: v0.3 upload updates to github #tomorrow @github

## Pending Task
A pending task is a line beginning with '?'.

Example:

TaskVim vim plugin:

    + prj_taskvim: write doc file #friday @write
    ? prj_taskvim: v0.3 upload updates to github #tomorrow @github

NOTES:

Other text is considered as a "note".

Example:

TaskVim vim plugin:

    A note about taskvim or something.
    + prj_taskvim: write doc file #friday @write
    ? prj_taskvim: v0.3 upload updates to github #tomorrow @github

==============================================================================
DEFAULT CONFIG                                             *taskvim-config*

The plugin configure the next vim options to manage list in a better way:

    * added — (DASH EM) as a comment
    * added @ as a keyword
    * formatoptions=qro1
    * textwidth=0 and wrapmargin=0 to avoid hard-wrap on list items
    * autoindent

==============================================================================
FILETYPE DETECT                                             *taskvim-ftdetect*

This package also contains a script to automatically use the TaskVim file type
for all files with the format <filename>.todo or todo.txt

==============================================================================
LICENCE                                                     *taskvim-licence*

Copyright (C) 2012 by Jose Luis Diaz Gonzalez 

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

==============================================================================
REPORTING BUGS AND FEATURE REQUESTS                             *taskvim-bugs*

The latest version of the script is always available on github:

http://github.com/joseluisdgz/taskvim

where you can report issues at

http://github.com/joseluisdgz/taskvim/issues

vim:ft=help:et:ts=2:sw=2:sts=2:norl:noma:nospell
